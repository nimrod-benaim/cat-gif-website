name: CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Lint and Test
        run: |
          # Run linters or tests if you have them
          echo "No tests implemented"  # Replace this with actual test commands if any

  deploy:
    name: Deploy to Docker Compose
    runs-on: ubuntu-latest
    needs: build
    env:  # Environment variables set globally for the deploy job
      PORT: 5000
      DATABASE_HOST: mysql
      DATABASE_PORT: 3306
      DATABASE_USER: catgif_user
      DATABASE_PASSWORD: catgif_password
      DATABASE_NAME: catgif_db
      MYSQL_ROOT_PASSWORD: yourpassword
      MYSQL_DATABASE: catgif_db
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        run: |
          docker-compose build
          docker-compose push

      - name: Deploy Application
        run: |
          docker-compose down
          docker-compose up -d
